#!/bin/bash

set -e

do_configure() {
  rm -rf /var/cache/moulinette/*

  if [ ! -f /etc/yunohost/installed ]; then
      bash /usr/share/yunohost/hooks/conf_regen/01-yunohost init
      bash /usr/share/yunohost/hooks/conf_regen/02-ssl init
      bash /usr/share/yunohost/hooks/conf_regen/06-slapd init
      bash /usr/share/yunohost/hooks/conf_regen/15-nginx init
  else
      echo "Regenerating configuration, this might take a while..."
      yunohost service regen-conf --output-as none

      echo "Launching migrations.."
      yunohost tools migrations migrate

      # restart yunohost-firewall if it's running
      service yunohost-firewall status >/dev/null \
        && restart_yunohost_firewall \
        || echo "yunohost-firewall service is not running, you should " \
            "consider to start it by doing 'service yunohost-firewall start'."
  fi

  # remove old PAM config and update it
  [[ ! -f /usr/share/pam-configs/my_mkhomedir ]] \
    || rm /usr/share/pam-configs/my_mkhomedir
  pam-auth-update --package
}

restart_yunohost_firewall() {
  echo "Restarting YunoHost firewall..."

  deb-systemd-helper unmask yunohost-firewall.service >/dev/null || true
  if deb-systemd-helper --quiet was-enabled yunohost-firewall.service; then
      deb-systemd-helper enable yunohost-firewall.service >/dev/null || true
  else
      deb-systemd-helper update-state yunohost-firewall.service >/dev/null || true
  fi

  if [ -x /etc/init.d/yunohost-firewall ]; then
      update-rc.d yunohost-firewall enable >/dev/null
      if [ -n "$2" ]; then
          invoke-rc.d yunohost-firewall restart >/dev/null || exit $?
      fi
  fi
}

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

case "$1" in
    configure)
        do_configure
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
